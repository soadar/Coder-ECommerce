paths:
  /api/users/login:
    post:
      tags:
        - Users
      summary: Login de usuario
      description: Login de usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/login"
        required: true
      responses:
        200:
          description: Login success
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Users/User"
  /api/users:
    get:
      tags:
        - Users
      summary: Lista de usuarios
      description: Lista de usuarios
      responses:
        200:
          description: Lista de usuarios
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Users/Users"
    delete:
      tags:
        - Users
      summary: Elimina los usuarios inactivos
      description: Elimina los usuarios con mas de 2 dias de inactividad
      responses:
        200:
          description: Elimina los usuarios inactivos
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Users/delUsers"
  /api/products:
    get:
      tags:
        - Products
      summary: Lista de productos
      description: Lista de productos
      responses:
        200:
          description: Lista de productos
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/Product"
    post:
      tags:
        - Products
      summary: Registro de un nuevo producto.
      description: Registro de un nuevo producto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/registerNewProduct"
        required: true
      responses:
        200:
          description: Se registó el producto correctamente.
          content:
            application/json:
              schema:
                $ref: "#/components/parameters/schemas/registerNewProduct"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
        404:
          description: Error de validacion del schema.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/validationError"
  /api/products/{pid}:
    get:
      tags:
        - Products
      summary: Busca producto por id
      description: Busca producto por id
      parameters:
        - name: pid
          in: path
          description: id referente al producto.
          required: true
          example: 64caea7554089ac708c3689a
          schema:
            type: string
      responses:
        200:
          description: Producto encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/Product"
        401:
          description: Id no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/errorGetById"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
    put:
      tags:
        - Products
      summary: Actualiza producto por id
      description: Actualiza producto por id
      parameters:
        - name: pid
          in: path
          description: id referente al producto.
          required: true
          example: 64caea7554089ac708c3689a
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/updateProduct"
        required: true
      responses:
        200:
          description: Producto encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/Product"
        401:
          description: Id no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/errorGetById"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
    delete:
      tags:
        - Products
      summary: Elimina un producto por id
      description: Elimina un producto por id
      parameters:
        - name: pid
          in: path
          description: id referente al producto.
          required: true
          example: 64caea7554089ac708c3689a
          schema:
            type: string
      responses:
        200:
          description: Producto encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/Product"
        401:
          description: Id no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/errorGetById"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
  /api/carts:
    get:
      tags:
        - Carts
      summary: Lista de changos
      description: Lista de changos
      responses:
        200:
          description: Lista de changos
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/CartById"
    post:
      tags:
        - Carts
      summary: Registro de un nuevo chango.
      description: Registro de un nuevo chango
      responses:
        200:
          description: Se registó el chango correctamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/Cart"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
        404:
          description: Error de validacion del schema.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/validationError"
  /api/carts/{pid}:
    get:
      tags:
        - Carts
      summary: Busca chango por id
      description: Busca chango por id
      parameters:
        - name: pid
          in: path
          description: id referente al chango.
          required: true
          example: 64ff7cfa218fb08b6787d31b
          schema:
            type: string
      responses:
        200:
          description: Producto encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/CartById"
        401:
          description: Id no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/errorGetById"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
    delete:
      tags:
        - Carts
      summary: Elimina los productos del chango
      description: Elimina los productos del chango
      parameters:
        - name: pid
          in: path
          description: id referente al chango.
          required: true
          example: 6508fbf1ffe036bbc91e0a8c
          schema:
            type: string
      responses:
        200:
          description: Chango encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/Cart"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
  /api/carts/{cid}/products/{pid}:
    post:
      tags:
        - Carts
      summary: Agrega el producto indicado
      description: Agrega el producto indicado, si el producto ya esta incluido, le suma 1
      parameters:
        - name: cid
          in: path
          description: id referente al chango.
          required: true
          example: 650919fc0aab52e0d0687df3
          schema:
            type: string
        - name: pid
          in: path
          description: id referente al producto.
          required: true
          example: 64caea7554089ac708c36892
          schema:
            type: string
      responses:
        200:
          description: Producto encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/CartById"
        401:
          description: Id no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/errorGetById"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
    put:
      tags:
        - Carts
      summary: Actualiza el stock del producto
      description: Actualiza el stock del producto
      parameters:
        - name: cid
          in: path
          description: id referente al chango.
          required: true
          example: 650919fc0aab52e0d0687df3
          schema:
            type: string
        - name: pid
          in: path
          description: id referente al producto.
          required: true
          example: 64caea7554089ac708c36892
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/updateStock"
        required: true
      responses:
        200:
          description: Chango encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/Cart"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
    delete:
      tags:
        - Carts
      summary: Elimina el producto del chango
      description: Elimina el producto del chango
      parameters:
        - name: cid
          in: path
          description: id referente al chango.
          required: true
          example: 650919fc0aab52e0d0687df3
          schema:
            type: string
        - name: pid
          in: path
          description: id referente al producto.
          required: true
          example: 64caea7554089ac708c36892
          schema:
            type: string
      responses:
        200:
          description: Chango encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/Cart"
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/notFound"
  /api/carts/{cid}/purchase:
    get:
      tags:
        - Carts
      summary: Finaliza el proceso de compra
      description: Finaliza el proceso de compra
      schema:
        type: string
      parameters:
        - name: cid
          in: path
          description: id referente al chango.
          required: true
          example: 6529b6b9876b20a92275dac8
          schema:
            type: string
      responses:
        200:
          description: Ticket de la compra
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Purchases/Purchase"
